{"version":3,"sources":["enemy.js"],"names":["mEmitter","require","config","cc","Class","extends","Component","properties","hit_frame","SpriteFrame","hp","speed","set","value","_speed","targetpos","_targetpos","score","_sprite","_anim","_gameState","_updateGameState","_status","onLoad","gameState","PLAYING","getComponent","Sprite","colider","PolygonCollider","Animation","updateGameState","bind","instance","registerEvent","event","UPDATE_GAMESTATE","data","stop","start","onEnemyKilled","emit","ENEMY_DESTROY","removeEvent","node","destroy","onCollisionEnter","other","self","group","play","_clips","_name","tween","delay","call","UPDATE_SCORE","spriteFrame","onAction","onPause","stopAction","_fly","log","moveTo","sequence","callFunc","_state","runAction","update","dt","PAUSE"],"mappings":"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","file":"enemy.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const mEmitter = require(\"mEmitter\");\r\nconst config = require(\"config\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        hit_frame: cc.SpriteFrame,\r\n        hp: 5,\r\n        speed: {\r\n            set: function(value) {\r\n                this._speed = value;\r\n            },\r\n        },\r\n\r\n        targetpos: {\r\n            set: function(value) {\r\n                this._targetpos = value;\r\n            },\r\n        },\r\n\r\n        score: 1,\r\n        _sprite: null,\r\n        _anim: null,\r\n        _gameState: null,\r\n        _updateGameState: null,\r\n        _status: \"move\",\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this._gameState = config.gameState.PLAYING;\r\n        this._sprite = this.getComponent(cc.Sprite);\r\n        this.colider = this.getComponent(cc.PolygonCollider);\r\n        this._anim = this.getComponent(cc.Animation);\r\n        this._updateGameState = this.updateGameState.bind(this);\r\n        mEmitter.instance.registerEvent(\r\n            config.event.UPDATE_GAMESTATE,\r\n            this._updateGameState\r\n        );\r\n    },\r\n    updateGameState(data) {\r\n        this._gameState = data;\r\n        if (data != config.gameState.PLAYING) this._anim.stop();\r\n        else this._anim.start();\r\n    },\r\n    onEnemyKilled() {\r\n        mEmitter.instance.emit(config.event.ENEMY_DESTROY);\r\n        mEmitter.instance.removeEvent(\r\n            config.event.UPDATE_GAMESTATE,\r\n            this._updateGameState\r\n        );\r\n        this.node.destroy();\r\n    },\r\n    onCollisionEnter: function(other, self) {\r\n        if (other.node.group == \"bullet\") {\r\n            this.hp -= 1;\r\n            if (this.hp == 0) {\r\n                this._anim.play(this._anim._clips[0]._name);\r\n                cc.tween(this.node)\r\n                    .delay(1)\r\n                    .call(() => {\r\n                        mEmitter.instance.emit(config.event.UPDATE_SCORE, this.score);\r\n                        this.onEnemyKilled();\r\n                    })\r\n                    .start();\r\n            } else if (this._sprite.spriteFrame !== this.hit_frame && this.hp > 0) {\r\n                this._sprite.spriteFrame = this.hit_frame;\r\n                this._anim.stop();\r\n            }\r\n        }\r\n    },\r\n\r\n    start() {\r\n        this.onAction();\r\n    },\r\n\r\n    onPause() {\r\n        this._status = \"pause\";\r\n        this.node.stopAction(this._fly);\r\n    },\r\n    onAction() {\r\n        cc.log(this._targetpos);\r\n        var moveTo = cc.moveTo(3, this._targetpos);\r\n        this._fly = cc.sequence(\r\n            moveTo,\r\n            cc.callFunc(() => {\r\n                this._state = \"idle\";\r\n            })\r\n        );\r\n        this.node.runAction(this._fly);\r\n    },\r\n\r\n    update(dt) {\r\n        if (this._gameState == config.gameState.PAUSE && this._status == \"move\") {\r\n            this.onPause();\r\n        } else if (\r\n            this._gameState == config.gameState.PLAYING &&\r\n            this._status == \"pause\"\r\n        ) {\r\n            this.node.runAction(this._fly);\r\n        }\r\n    },\r\n});"]}