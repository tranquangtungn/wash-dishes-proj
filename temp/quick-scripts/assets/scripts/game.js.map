{"version":3,"sources":["game.js"],"names":["mEmitter","require","config","cc","Class","extends","Component","properties","bg_1","Node","bg_2","title","Label","gameReadyLayer","gamePlayingLayer","gamePauseLayer","gameOverLayer","heroSkinsLayer","rankedLayer","settingsLayer","waveTitle","_LayerList","default","type","score","scoreOver","pre_hero","Prefab","_hero","pre_creep","pre_assassin","pre_motherShip","pre_bullet","sound_src","AudioClip","_waveNum","Integer","notify","index","initWave","onLoad","initLocalStorage","settings","JSON","parse","sys","localStorage","getItem","storageKey","SETTINGS","effectVolume","soundVolume","sound","audioEngine","play","instance","manager","director","getCollisionManager","enabled","getData","init","setTouch","registerEvent","event","UPDATE_SOUND","setSoundVolume","bind","UPDATE_EFFECT","setEffectVolume","UPDATE_SCORE","updateScore","GAME_OVER","gameFinished","log","currentWave","currentScore","setItem","stringify","leaderBoard","LEADERBOARD","name","start","number","setVolume","update","dt","setBg","gameState","PLAYING","bulletTime","createBullet","isBgMove","y","height","zIndex","loadLayer","READY","string","spawnCreepTime","spawnAssasinTime","spawnMotherShipTime","level","node","on","pos_hero","getPosition","pos_mov","getDelta","x","setPosition","v2","OVER","removeAllBullet","removeAllEnemy","createEnemy","pre_enemy","allRow","Math","floor","enemy","instantiate","js","getComponent","speed","targetpos","parent","spawnHero","Number","updateLevel","pos","bullet","children","i","length","onBulletKilled","onEnemyKilled","removeHero","onHeroKilled","len","active","clickBtn","sender","str","ENEMY_DESTROY","waveStatus","emit","UPDATE_GAMESTATE","PAUSE","saveSettings","saveLeaderBoard","loader","loadRes","getWaveData","err","obj","waveContent","json","wave","waveCount","wavecount","waveNum","content","totalEnemy","allCol","sologan","blink","hide","fadeTo","spawn","callFunc","map","item","waveAction","sequence","runAction"],"mappings":"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","file":"game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["const mEmitter = require(\"./mEmitter\");\r\nconst config = require(\"config\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        bg_1: cc.Node,\r\n        bg_2: cc.Node,\r\n        title: cc.Label,\r\n\r\n        gameReadyLayer: cc.Node,\r\n        gamePlayingLayer: cc.Node,\r\n        gamePauseLayer: cc.Node,\r\n        gameOverLayer: cc.Node,\r\n        heroSkinsLayer: cc.Node,\r\n        rankedLayer: cc.Node,\r\n        settingsLayer: cc.Node,\r\n        waveTitle: cc.Node,\r\n\r\n        _LayerList: {\r\n            default: [],\r\n            type: [cc.Node],\r\n        },\r\n\r\n        score: cc.Label,\r\n        scoreOver: cc.Label,\r\n\r\n        pre_hero: cc.Prefab,\r\n        _hero: cc.Node,\r\n\r\n        pre_creep: cc.Prefab,\r\n        pre_assassin: cc.Prefab,\r\n        pre_motherShip: cc.Prefab,\r\n        pre_bullet: cc.Prefab,\r\n\r\n        sound_src: {\r\n            default: null,\r\n            type: cc.AudioClip,\r\n        },\r\n        _waveNum: {\r\n            default: 1,\r\n            type: cc.Integer,\r\n            notify: function(index) {\r\n                this.initWave(this._waveNum)\r\n            },\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.initLocalStorage();\r\n\r\n        this._LayerList = [\r\n            this.gameReadyLayer,\r\n            this.gamePlayingLayer,\r\n            this.gamePauseLayer,\r\n            this.gameOverLayer,\r\n            this.heroSkinsLayer,\r\n            this.rankedLayer,\r\n            this.settingsLayer,\r\n        ];\r\n\r\n        this.settings = JSON.parse(\r\n            cc.sys.localStorage.getItem(config.storageKey.SETTINGS)\r\n        );\r\n        this.effectVolume = this.settings.effectVolume;\r\n        this.soundVolume = this.settings.soundVolume;\r\n        this.sound = cc.audioEngine.play(this.sound_src, true, this.soundVolume);\r\n\r\n        //cc.log(this._LayerList)\r\n        mEmitter.instance = new mEmitter();\r\n        //cc.log(config.event.UPDATE_SCORE)\r\n        let manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n        //manager.enabledDebugDraw = true;\r\n        this.getData();\r\n        this.init();\r\n        this.setTouch();\r\n\r\n        mEmitter.instance.registerEvent(\r\n            config.event.UPDATE_SOUND,\r\n            this.setSoundVolume.bind(this)\r\n        );\r\n        mEmitter.instance.registerEvent(\r\n            config.event.UPDATE_EFFECT,\r\n            this.setEffectVolume.bind(this)\r\n        );\r\n        mEmitter.instance.registerEvent(\r\n            config.event.UPDATE_SCORE,\r\n            this.updateScore.bind(this)\r\n        );\r\n        mEmitter.instance.registerEvent(\r\n            config.event.GAME_OVER,\r\n            this.gameFinished.bind(this)\r\n        );\r\n    },\r\n    initLocalStorage() {\r\n        let settings = JSON.parse(\r\n            cc.sys.localStorage.getItem(config.storageKey.SETTINGS)\r\n        );\r\n        if (!settings) {\r\n            cc.log(\"no storage\");\r\n            settings = {\r\n                soundVolume: 0.5,\r\n                effectVolume: 0.5,\r\n                currentWave: 1,\r\n                currentScore: 0,\r\n            };\r\n            cc.sys.localStorage.setItem(\r\n                config.storageKey.SETTINGS,\r\n                JSON.stringify(settings)\r\n            );\r\n        }\r\n        let leaderBoard = JSON.parse(\r\n            cc.sys.localStorage.getItem(config.storageKey.LEADERBOARD)\r\n        );\r\n        if (!leaderBoard) {\r\n            cc.log(\"no storage\");\r\n            leaderBoard = [{\r\n                    name: \"quangtung\",\r\n                    score: 300,\r\n                },\r\n                {\r\n                    name: \"quangtung\",\r\n                    score: 200,\r\n                },\r\n                {\r\n                    name: \"quangtung\",\r\n                    score: 100,\r\n                },\r\n                {\r\n                    name: \"quangtung\",\r\n                    score: 300,\r\n                },\r\n                {\r\n                    name: \"quangtung\",\r\n                    score: 200,\r\n                },\r\n                {\r\n                    name: \"quangtung\",\r\n                    score: 100,\r\n                },\r\n                {\r\n                    name: \"quangtung\",\r\n                    score: 300,\r\n                },\r\n                {\r\n                    name: \"quangtung\",\r\n                    score: 200,\r\n                },\r\n                {\r\n                    name: \"quangtung\",\r\n                    score: 100,\r\n                },\r\n            ];\r\n            cc.sys.localStorage.setItem(\r\n                config.storageKey.LEADERBOARD,\r\n                JSON.stringify(leaderBoard)\r\n            );\r\n        }\r\n    },\r\n    start() {},\r\n\r\n    setSoundVolume(number) {\r\n        this.soundVolume = number;\r\n        cc.audioEngine.setVolume(this.sound, this.soundVolume);\r\n    },\r\n    setEffectVolume(number) {\r\n        this.effectVolume = number;\r\n    },\r\n    update(dt) {\r\n        this.setBg();\r\n        if (this.gameState == config.gameState.PLAYING) {\r\n            this.bulletTime++;\r\n\r\n            if (this.bulletTime == 10) {\r\n                this.bulletTime = 0;\r\n                this.createBullet();\r\n            }\r\n        }\r\n    },\r\n    init() {\r\n        this.isBgMove = false;\r\n        this.bg_1.y = 0;\r\n        this.bg_2.y = this.bg_1.y + this.bg_1.height;\r\n        this.gameReadyLayer.zIndex = 1;\r\n        // this.gameOverLayer.zIndex = -1;\r\n        this.gamePauseLayer.zIndex = 2;\r\n        this.settingsLayer.zIndex = 2;\r\n        //this.score.zIndex = 3;\r\n        this.loadLayer(this.gameReadyLayer);\r\n        this.bulletTime = 0;\r\n        this.gameState = config.gameState.READY;\r\n        this.score.string = 0;\r\n\r\n        this.spawnCreepTime = 0;\r\n        this.spawnAssasinTime = 0;\r\n        this.spawnMotherShipTime = 0;\r\n        this.level = 1;\r\n    },\r\n    setTouch() {\r\n        this.node.on(\r\n            \"touchstart\",\r\n            function(event) {\r\n                // this.gameState = config.gameState.PLAYING;\r\n                // this.gameReadyLayer.active = false;\r\n                // this.gamePlayingLayer.active = true;\r\n                //this.gameOverLayer.active = false;\r\n                //this.isBgMove = true;\r\n            },\r\n            this\r\n        );\r\n        this.node.on(\r\n            \"touchmove\",\r\n            function(event) {\r\n                if (this._hero.name != \"\") {\r\n                    let pos_hero = this._hero.getPosition();\r\n                    let pos_mov = event.getDelta();\r\n                    let x = pos_hero.x + pos_mov.x;\r\n                    let y = pos_hero.y + pos_mov.y;\r\n                    if (x < 280 && x > -280)\r\n                        if (y < 400 && y > -400) this._hero.setPosition(cc.v2(x, y));\r\n                }\r\n            },\r\n            this\r\n        );\r\n        this.node.on(\r\n            \"touchend\",\r\n            function(event) {\r\n                cc.log(\"touchend\");\r\n            },\r\n            this\r\n        );\r\n    },\r\n    gameFinished() {\r\n        this.gameState = config.gameState.OVER;\r\n        this.removeAllBullet();\r\n        this.removeAllEnemy();\r\n\r\n        this.loadLayer(this.gameOverLayer);\r\n        this.scoreOver.string = this.score.string;\r\n    },\r\n    createEnemy(pre_enemy, index) {\r\n        let x = index % this.allRow;\r\n        let y = Math.floor(index / this.allRow);\r\n        let enemy = cc.instantiate(pre_enemy);\r\n        enemy.setPosition(0, 1000);\r\n        let js = enemy.getComponent(\"enemy\");\r\n        js.speed = 2;\r\n        js.targetpos = cc.v2(x * 100 - (100 * this.allRow) / 2 + 50, y * 100);\r\n        enemy.parent = this.node;\r\n    },\r\n    spawnHero() {\r\n        this._hero = cc.instantiate(this.pre_hero);\r\n        this._hero.parent = this.node;\r\n        this._hero.setPosition(cc.v2(0, -300));\r\n    },\r\n    updateScore(score) {\r\n        //cc.log(\"tets\")\r\n        this.score.string = Number(this.score.string) + score;\r\n        this.updateLevel();\r\n    },\r\n    updateLevel() {\r\n        this.level = Math.floor(this.score.string / 50) + 1;\r\n    },\r\n    setBg() {\r\n        if (this.isBgMove) {\r\n            this.bg_2.y -= 0.5;\r\n            this.bg_1.y -= 0.5;\r\n            if (this.bg_1.y <= -this.bg_1.height)\r\n                this.bg_1.y = this.bg_2.y + this.bg_1.height;\r\n            if (this.bg_2.y <= -this.bg_2.height)\r\n                this.bg_2.y = this.bg_1.y + this.bg_2.height;\r\n        }\r\n    },\r\n    createBullet() {\r\n        if (this._hero.name != \"\") {\r\n            let pos = this._hero.getPosition();\r\n            let bullet = cc.instantiate(this.pre_bullet);\r\n            bullet.parent = this.node;\r\n            bullet.setPosition(cc.v2(pos.x, pos.y + this._hero.height / 2));\r\n        }\r\n    },\r\n\r\n    removeAllBullet() {\r\n        let children = this.node.children;\r\n        for (let i = children.length - 1; i >= 0; i--) {\r\n            let bullet = children[i].getComponent(\"bullet\");\r\n            if (bullet) bullet.onBulletKilled();\r\n        }\r\n    },\r\n    removeAllEnemy() {\r\n        let children = this.node.children;\r\n        for (let i = children.length - 1; i >= 0; i--) {\r\n            let enemy = children[i].getComponent(\"enemy\");\r\n            if (enemy) enemy.onEnemyKilled();\r\n        }\r\n    },\r\n    removeHero() {\r\n        let children = this.node.children;\r\n        for (let i = children.length - 1; i >= 0; i--) {\r\n            let enemy = children[i].getComponent(\"hero\");\r\n            if (enemy) {\r\n                enemy.onHeroKilled();\r\n            }\r\n        }\r\n    },\r\n    loadLayer(node) {\r\n        let len = this._LayerList.length;\r\n        for (let i = 0; i < len; i++) {\r\n            if (this._LayerList[i] === node) this._LayerList[i].active = true;\r\n            else this._LayerList[i].active = false;\r\n        }\r\n    },\r\n    clickBtn(sender, str) {\r\n        //cc.log(str)\r\n        switch (str) {\r\n            case \"play\":\r\n                this.spawnHero();\r\n                this._waveNum = 1\r\n                mEmitter.instance.registerEvent(config.event.ENEMY_DESTROY, this.waveStatus.bind(this))\r\n            case \"resume\":\r\n                this.isBgMove = true;\r\n                this.loadLayer(this.gamePlayingLayer);\r\n                this.gameState = config.gameState.PLAYING;\r\n                mEmitter.instance.emit(config.event.UPDATE_GAMESTATE, this.gameState);\r\n                break;\r\n            case \"pause\":\r\n                this.isBgMove = false;\r\n                this.loadLayer(this.gamePauseLayer);\r\n                this.gameState = config.gameState.PAUSE;\r\n                mEmitter.instance.emit(config.event.UPDATE_GAMESTATE, this.gameState);\r\n                break;\r\n            case \"restart\":\r\n                this.isBgMove = false;\r\n                this.loadLayer(this.gameReadyLayer);\r\n                this.gameState = config.gameState.READY;\r\n                this.removeAllBullet();\r\n                this.removeAllEnemy();\r\n                this.removeHero();\r\n                this.init();\r\n                break;\r\n            case \"skins\":\r\n                this.loadLayer(this.heroSkinsLayer);\r\n                //this.gameState = config.gameState.HEROSKINS;\r\n                break;\r\n            case \"ranked\":\r\n                this.loadLayer(this.rankedLayer);\r\n                //this.gameState = config.gameState.RANKED;\r\n                break;\r\n            case \"settings\":\r\n                this.loadLayer(this.settingsLayer);\r\n                // this.gameState = config.gameState.SETTINGS;\r\n                break;\r\n            case \"back\":\r\n                if (this.gameState == config.gameState.READY)\r\n                    this.loadLayer(this.gameReadyLayer);\r\n                else if (this.gameState == config.gameState.PAUSE)\r\n                    this.loadLayer(this.gamePauseLayer);\r\n                //this.saveLeaderBoard()\r\n                this.saveSettings();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    saveLeaderBoard() {},\r\n    saveSettings() {\r\n        cc.log(\"save settings\");\r\n        let settings = {\r\n            soundVolume: this.soundVolume,\r\n            effectVolume: this.effectVolume,\r\n            currentWave: 1,\r\n            currentScore: 0,\r\n        };\r\n        cc.sys.localStorage.setItem(\r\n            config.storageKey.SETTINGS,\r\n            JSON.stringify(settings)\r\n        );\r\n    },\r\n    //read json\r\n    getData() {\r\n        cc.loader.loadRes(\"waveconfig.json\", this.getWaveData.bind(this));\r\n    },\r\n    getWaveData(err, obj) {\r\n        if (err) {\r\n            cc.log(err);\r\n            return;\r\n        }\r\n        this.waveContent = obj.json.wave;\r\n        this.waveCount = obj.json.wavecount;\r\n    },\r\n    initWave(waveNum) {\r\n        if (1 > this.waveCount) {\r\n            cc.log(\"overLoad\");\r\n            this.gameFinished();\r\n            return;\r\n        }\r\n        cc.log(this.waveContent[waveNum]);\r\n        let content = this.waveContent[waveNum].content;\r\n        this.totalEnemy = this.waveContent[waveNum].enemy;\r\n        this.allRow = this.waveContent[waveNum].allRow;\r\n        this.allCol = this.waveContent[waveNum].allCol;\r\n        cc.log(content);\r\n        let title = \"Wave \" + waveNum;\r\n        let sologan = this.waveContent[waveNum].sologan;\r\n        let waveTitle = this.waveTitle.children;\r\n        waveTitle[0].getComponent(cc.Label).string = title;\r\n        waveTitle[1].getComponent(cc.Label).string = sologan;\r\n        let blink = cc.blink(1, 3);\r\n        let hide = cc.fadeTo(3, 0);\r\n        let spawn = cc.spawn(\r\n            hide,\r\n            cc.callFunc(() => {\r\n                content.map((item, index) => {\r\n                    switch (item) {\r\n                        case 1:\r\n                            {\r\n                                this.createEnemy(this.pre_creep, index);\r\n                                break;\r\n                            }\r\n                        case 2:\r\n                            {\r\n                                this.createEnemy(this.pre_assassin, index);\r\n                                break;\r\n                            }\r\n                        case 3:\r\n                            {\r\n                                this.createEnemy(this.pre_motherShip, index);\r\n                                break;\r\n                            }\r\n                        default:\r\n                            {\r\n                                break;\r\n                            }\r\n                    }\r\n                });\r\n            })\r\n        );\r\n        let waveAction = cc.sequence(blink, spawn);\r\n        this.waveTitle.runAction(waveAction);\r\n    },\r\n    waveStatus() {\r\n        this.totalEnemy--;\r\n        cc.log(this.totalEnemy);\r\n        if (this.totalEnemy == 0) {\r\n            this._waveNum++;\r\n            cc.log(\"Change wave\");\r\n        }\r\n    },\r\n});"]}