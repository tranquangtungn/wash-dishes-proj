{"version":3,"sources":["../../../../assets/scripts/assets/scripts/enemy.js"],"names":["mEmitter","require","config","gameState","cc","Class","extends","Component","properties","hit_frame","SpriteFrame","hp","speed","set","value","_speed","score","targetpos","log","_targetpos","_sprite","_anim","_gameState","_updateGameState","_status","onLoad","PLAYING","getComponent","Sprite","colider","PolygonCollider","Animation","updateGameState","bind","instance","registerEvent","event","UPDATE_GAMESTATE","data","stop","start","onEnemyKilled","emit","ENEMY_DESTROY","removeEvent","node","destroy","onCollisionEnter","other","self","group","play","_clips","_name","tween","delay","call","UPDATE_SCORE","spriteFrame","onAction","onPause","stopAction","_fly","moveTo","sequence","callFunc","_state","runAction","update","dt","PAUSE"],"mappings":"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","file":"enemy.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const mEmitter = require(\"mEmitter\");\nconst config = require(\"config\");\nconst { gameState } = require(\"./config\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        hit_frame: cc.SpriteFrame,\n        hp: 5,\n        speed: {\n            set: function (value) {\n                this._speed = value;\n            },\n        },\n        score: 1,\n        targetpos: {\n            set: function (value) {\n                cc.log(value)\n                this._targetpos = value\n            }\n        },\n        _sprite: null,\n        _anim: null,\n        _gameState: null,\n        _updateGameState: null,\n        _status: 'move'\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        this._gameState = config.gameState.PLAYING\n        this._sprite = this.getComponent(cc.Sprite)\n        this.colider = this.getComponent(cc.PolygonCollider)\n        this._anim = this.getComponent(cc.Animation)\n        this._updateGameState = this.updateGameState.bind(this)\n        mEmitter.instance.registerEvent(config.event.UPDATE_GAMESTATE, this._updateGameState)\n    },\n    // setMoveTo(x, y) {\n    //     cc.log(y)\n    // },\n    updateGameState(data) {\n        this._gameState = data\n        if (data != config.gameState.PLAYING)\n            this._anim.stop()\n        else\n            this._anim.start()\n    },\n    onEnemyKilled() {\n        mEmitter.instance.emit(config.event.ENEMY_DESTROY)\n        mEmitter.instance.removeEvent(config.event.UPDATE_GAMESTATE, this._updateGameState)\n        this.node.destroy();\n    },\n    onCollisionEnter: function (other, self) {\n        if (other.node.group == \"bullet\") {\n            this.hp -= 1;\n            if (this.hp == 0) {\n                this._anim.play(this._anim._clips[0]._name)\n                cc.tween(this.node)\n                    .delay(1)\n                    .call(() => {\n                        mEmitter.instance.emit(config.event.UPDATE_SCORE, this.score)\n                        this.onEnemyKilled()\n                    })\n                    .start()\n            } else if (this._sprite.spriteFrame !== this.hit_frame && this.hp > 0) {\n                this._sprite.spriteFrame = this.hit_frame\n                this._anim.stop()\n            }\n        }\n    },\n\n    start() {\n        this.onAction()\n    },\n    onPause() {\n        this._status = 'pause';\n        this.node.stopAction(this._fly)\n    },\n    onAction() {\n        var moveTo = cc.moveTo(3, this._targetpos)\n        this._fly = cc.sequence(moveTo, cc.callFunc(() => {\n            this._state = 'idle'\n        }))\n        this.node.runAction(this._fly)\n    },\n    update(dt) {\n        if (this._gameState == config.gameState.PAUSE && this._status == 'move') {\n            this.onPause()\n        } else if (this._gameState == config.gameState.PLAYING && this._status == 'pause') {\n            this.node.runAction(this._fly)\n        }\n    },\n});"]}